name: PR Checks

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20, 22]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript checks across all workspaces
        run: npm run typecheck:all

      - name: Run build verification for API service
        run: npm run build --workspace=services/api-service && node services/api-service/scripts/build-verifier.js
        if: hashFiles('services/api-service/scripts/build-verifier.js') != ''

      - name: Run unit tests across all workspaces
        run: npm run test:unit:all

      - name: Run integration tests across all workspaces
        run: npm run test:integration:all

      - name: Run E2E tests for API service
        run: npm run test:e2e --workspace=services/api-service
        if: hashFiles('services/api-service/vitest.e2e.config.ts') != ''

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-node-${{ matrix.node-version }}
          path: |
            coverage/
            test-results.xml
          retention-days: 7

  lint:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check code formatting across all workspaces
        run: npm run format:check:all
        continue-on-error: true

      - name: Run linting across all workspaces
        run: npm run lint:all

  security:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level=moderate

      - name: Check for known vulnerabilities
        run: |
          if command -v snyk &> /dev/null; then
            snyk test
          else
            echo "Snyk not available, skipping vulnerability check"
          fi

  build-matrix:
    name: Build Matrix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [20, 22]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build all services
        run: npm run build:all

      - name: Verify API service build
        run: node services/api-service/scripts/build-verifier.js
        if: hashFiles('services/api-service/scripts/build-verifier.js') != ''

  comprehensive:
    name: Comprehensive Test Suite
    runs-on: ubuntu-latest
    needs: [test, lint, security]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run comprehensive test suite for API service
        run: npm run test:ci --workspace=services/api-service
        if: hashFiles('services/api-service/test-runner.js') != ''

      - name: Fallback comprehensive tests
        run: npm run ci --workspace=services/api-service
        if: hashFiles('services/api-service/test-runner.js') == ''

      - name: Generate test report
        run: |
          echo "## Test Results" >> $GITHUB_STEP_SUMMARY
          echo "All comprehensive tests completed successfully" >> $GITHUB_STEP_SUMMARY

  status-check:
    name: Status Check
    runs-on: ubuntu-latest
    needs: [test, lint, security, build-matrix]
    if: always()

    steps:
      - name: Check all jobs status
        run: |
          if [[ "${{ needs.test.result }}" == "success" && 
                "${{ needs.lint.result }}" == "success" && 
                "${{ needs.security.result }}" == "success" && 
                "${{ needs.build-matrix.result }}" == "success" ]]; then
            echo "✅ All checks passed!"
            exit 0
          else
            echo "❌ Some checks failed:"
            echo "Test: ${{ needs.test.result }}"
            echo "Lint: ${{ needs.lint.result }}"
            echo "Security: ${{ needs.security.result }}"
            echo "Build Matrix: ${{ needs.build-matrix.result }}"
            exit 1
          fi
