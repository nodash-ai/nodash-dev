name: Publish API Interfaces

on:
  push:
    branches: [main]
    paths:
      - 'packages/servers/**'
      - 'packages/api-interfaces/**'
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build API interfaces
        run: |
          cd packages/api-interfaces
          npm run build
          
      - name: Check if version exists
        id: version-check
        run: |
          cd packages/api-interfaces
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "current-version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          
          if npm view @nodash/api-interfaces@$CURRENT_VERSION > /dev/null 2>&1; then
            echo "version-exists=true" >> $GITHUB_OUTPUT
          else
            echo "version-exists=false" >> $GITHUB_OUTPUT
          fi
          
      - name: Bump version if needed
        if: steps.version-check.outputs.version-exists == 'true'
        run: |
          cd packages/api-interfaces
          npm version patch --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "New version: $NEW_VERSION"
          
      - name: Publish to npm
        run: |
          cd packages/api-interfaces
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Create release tag
        run: |
          cd packages/api-interfaces
          VERSION=$(node -p "require('./package.json').version")
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a "api-interfaces-v$VERSION" -m "Release API interfaces v$VERSION"
          git push origin "api-interfaces-v$VERSION" 